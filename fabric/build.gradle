import net.fabricmc.loom.task.RemapJarTask

plugins {
    id 'fabric-loom' version '0.8-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

repositories {
    maven { url 'https://maven.fabricmc.net/' }
}

configurations {
    shade
    implementation.extendsFrom shade
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

dependencies {

    minecraft("com.mojang:minecraft:${project.ext.minecraftVersion}")
    mappings(minecraft.officialMojangMappings())
    modImplementation("net.fabricmc:fabric-loader:0.11.6")

    modImplementation("net.fabricmc.fabric-api:fabric-api:0.37.2+1.17")
    modImplementation("me.lucko:fabric-permissions-api:0.1-SNAPSHOT") {
        transitive = false
    }

    shade(project(':api'))
    shade(project(':common'))

}

processResources {

    Map<String, ?> ex = new HashMap<>()
    ex.put("version", project.ext.fullVersion)
    ex.put("modid", project.ext.modid)
    ex.put("modname", project.ext.modname)
    ex.put("modclass", project.ext.modclass)
    ex.put("minecraftVersion", project.ext.minecraftMajorVersion)

    filesMatching("fabric.mod.json") {
        expand(ex)
    }
}

shadowJar {

    setArchivesBaseName("${project.ext.archiveName}-fabric-dev")
    configurations = [project.configurations.shade]

    dependencies {
        exclude('net.fabricmc:.*')
        include(project(':api'))
        include(project(':common'))

        exclude '/mappings/*'
    }
}

task remapShadowJar(type: RemapJarTask) {

    archiveBaseName.set("${project.ext.archiveName}-fabric-mc${project.ext.minecraftVersion}")

    dependsOn(tasks.shadowJar)
    input = tasks.shadowJar.getArchivePath()
    addNestedDependencies = true

}

tasks.assemble.dependsOn tasks.remapShadowJar

artifacts {
    archives remapShadowJar
    shadow sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            version = project.ext.publicationVersion
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    repositories {
        maven {
            if (project.hasProperty("pubUrl")) {
                url = project.pubUrl as String
                credentials {
                    username project.pubUser as String
                    password project.pubPass as String
                }
            }
        }
    }
}